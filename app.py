import streamlit as st
import pandas as pd
import plotly.graph_objects as go

# --- Configuraci√≥n de la P√°gina ---
st.set_page_config(
    page_title="Diagn√≥stico Financiero y de Cr√©dito",
    page_icon="üí°",
    layout="wide"
)

# --- INICIALIZACI√ìN DEL ESTADO DE SESI√ìN --- # <-- CAMBIO
# Esto es para "recordar" si los botones han sido presionados
if 'lifestyle_calculated' not in st.session_state:
    st.session_state.lifestyle_calculated = False
if 'credit_calculated' not in st.session_state:
    st.session_state.credit_calculated = False

# --- T√≠tulo y Descripci√≥n ---
st.title('üí° Diagn√≥stico Financiero 2-en-1')
st.markdown("""
Esta herramienta te ayuda en dos pasos:
1.  **Diagn√≥stico de Estilo de Vida:** ¬øGastas m√°s de lo que ganas actualmente?
2.  **An√°lisis de Cr√©dito:** ¬øPuedes pagar el pr√©stamo que quieres y cu√°les son los riesgos reales?
""")

# --- Barra Lateral para Entradas del Usuario ---
st.sidebar.header('Paso 1: Tus Finanzas')

# --- INGRESOS ---
with st.sidebar.expander("üí∞ Ingresos", expanded=True):
    st.markdown("Ingresa aqu√≠ tu **sueldo mensual neto**, despu√©s de impuestos.")
    ingreso_mensual = st.number_input('Ingreso Mensual Neto (MXN)', min_value=0.0, step=500.0, label_visibility="collapsed")

# --- GASTOS FIJOS ---
with st.sidebar.expander("üè† Gastos Fijos", expanded=True):
    st.markdown("Son los gastos que **no cambian** mes a mes: Renta, hipoteca, servicios, colegiaturas, etc.")
    gastos_fijos = st.number_input('Suma total de gastos fijos (MXN)', min_value=0.0, step=100.0, label_visibility="collapsed")

# --- GASTOS VARIABLES ---
with st.sidebar.expander("üåÆ Gastos Variables", expanded=True):
    st.markdown("Un **estimado** de gastos que var√≠an: Comida, transporte, entretenimiento, compras, etc.")
    gastos_variables = st.number_input('Estimado de gastos variables (MXN)', min_value=0.0, step=100.0, label_visibility="collapsed")

# --- SIMULACI√ìN DE CR√âDITO ---
st.sidebar.header("Paso 2: Simula un Cr√©dito")
with st.sidebar.expander("üí∏ Datos del Pr√©stamo", expanded=True):
    monto_prestamo = st.number_input('Monto del pr√©stamo (MXN)', min_value=0.0, step=1000.0)
    plazo_meses = st.number_input('Plazo para pagar (meses)', min_value=1, step=1)
    tasa_anual = st.slider('Tasa de Inter√©s Anual (%)', min_value=0.0, max_value=120.0, value=35.0, step=0.5)

# --- ====================================================================== ---
# --- =================== PANEL PRINCIPAL DE AN√ÅLISIS ====================== ---
# --- ====================================================================== ---
st.markdown('---')

if ingreso_mensual <= 0:
    st.info('Ingresa tus finanzas en la barra lateral para iniciar el diagn√≥stico.')
else:
    # --- C√ÅLCULOS BASE (SIEMPRE SE HACEN PERO NO SE MUESTRAN HASTA PRESIONAR BOT√ìN) ---
    total_gastos = gastos_fijos + gastos_variables
    flujo_libre = ingreso_mensual - total_gastos

    # --- BOT√ìN PARA ETAPA 1 --- # <-- CAMBIO
    if st.button('1. Analizar mi Estilo de Vida', use_container_width=True):
        st.session_state.lifestyle_calculated = True
        st.session_state.credit_calculated = False # Resetea el c√°lculo del cr√©dito si se vuelve a analizar el estilo de vida

    # --- L√ìGICA DE VISUALIZACI√ìN ETAPA 1 --- # <-- CAMBIO
    if st.session_state.lifestyle_calculated:
        st.header("Diagn√≥stico 1: Tu Estilo de Vida Actual")
        
        col1, col2 = st.columns([2, 1])

        with col1:
            if flujo_libre >= 0:
                st.success(f"**¬°Felicidades! Vives dentro de tus posibilidades.** ‚úÖ")
                st.markdown(f"Actualmente, te sobran **${flujo_libre:,.2f}** cada mes.")
            else:
                st.error(f"**¬°Alerta! Est√°s gastando m√°s de lo que ganas.** ‚ùå")
                st.markdown(f"Actualmente, tienes un d√©ficit de **${abs(flujo_libre):,.2f}** cada mes.")
        
        with col2:
            if total_gastos > 0:
                labels = ['Gastos Fijos', 'Gastos Variables']
                values = [gastos_fijos, gastos_variables]
                pie_fig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3, textinfo='percent', marker_colors=['#FF6347', '#FFD700'])])
                pie_fig.update_layout(title_text='Distribuci√≥n de Gastos', showlegend=True, margin=dict(t=40, b=0, l=0, r=0))
                st.plotly_chart(pie_fig, use_container_width=True)
        
        # --- BOT√ìN PARA ETAPA 2 --- # <-- CAMBIO
        if monto_prestamo > 0:
            if st.button('2. Analizar Viabilidad del Cr√©dito', use_container_width=True):
                st.session_state.credit_calculated = True

    # --- L√ìGICA DE VISUALIZACI√ìN ETAPA 2 --- # <-- CAMBIO
    if st.session_state.credit_calculated and monto_prestamo > 0:
        st.markdown("---")
        st.header("Diagn√≥stico 2: An√°lisis de Viabilidad del Cr√©dito")

        pago_mensual_credito = 0.0
        tasa_mensual = (tasa_anual / 100) / 12

        if plazo_meses > 0:
            if tasa_anual > 0:
                numerador = tasa_mensual * ((1 + tasa_mensual) ** plazo_meses)
                denominador = ((1 + tasa_mensual) ** plazo_meses) - 1
                if denominador > 0: pago_mensual_credito = monto_prestamo * (numerador / denominador)
                else: pago_mensual_credito = monto_prestamo / plazo_meses
            else: pago_mensual_credito = monto_prestamo / plazo_meses

        flujo_final_con_credito = flujo_libre - pago_mensual_credito

        if flujo_libre < 0:
            st.warning("**ADVERTENCIA:** Ya tienes un d√©ficit. A√±adir un cr√©dito es extremadamente riesgoso.")

        st.metric('Pago Mensual del Cr√©dito', f"${pago_mensual_credito:,.2f}")

        if flujo_final_con_credito >= 0:
            st.success(f"**Veredicto del Cr√©dito: VIABLE.** üëç")
            st.markdown(f"A√∫n despu√©s de pagar la mensualidad, te quedar√≠an **${flujo_final_con_credito:,.2f}**.")
        else:
            deficit_total_mensual = abs(flujo_final_con_credito)
            st.error(f"**Veredicto del Cr√©dito: NO VIABLE.** üëé")
            st.markdown(f"Si tomas este cr√©dito, tu d√©ficit mensual total ser√≠a de **${deficit_total_mensual:,.2f}**.")
            
            st.info(f"Para poder pagar este cr√©dito, necesitar√≠as **aumentar tu ingreso en ${deficit_total_mensual:,.2f}** o reducir tus gastos.")
            
            # --- SECCI√ìN DE PROYECCI√ìN DE DEUDA ---
            st.subheader("‚ö†Ô∏è Proyecci√≥n de Deuda Realista")
            st.markdown("As√≠ crecer√≠a tu deuda, considerando que el d√©ficit cambia al terminar el plazo del cr√©dito:")

            a√±os_proj = [1, 2, 3, 5, 10, 20]
            deuda_proyectada = []
            deuda_actual = 0
            deficit_estructural = abs(min(0, flujo_libre))

            for mes_actual in range(1, max(a√±os_proj) * 12 + 1):
                if mes_actual <= plazo_meses:
                    deficit_a_sumar = deficit_total_mensual
                else:
                    deficit_a_sumar = deficit_estructural
                
                deuda_actual += deficit_a_sumar
                deuda_actual *= (1 + tasa_mensual)

                if mes_actual % 12 == 0:
                    a√±o = mes_actual // 12
                    if a√±o in a√±os_proj:
                        deuda_proyectada.append((f"{a√±o} a√±o(s)", f"${deuda_actual:,.2f}"))

            df_proyeccion = pd.DataFrame(deuda_proyectada, columns=['Tiempo', 'Deuda Acumulada'])
            st.table(df_proyeccion)
            st.caption("Nota: No incluye cargos por falta de pago o penalizaciones.")

            # --- GR√ÅFICA MEJORADA ---
            st.subheader("Gr√°fica de Ganancias vs. P√©rdidas")
            meses_grafica = list(range(int(plazo_meses) + 1))
            saldo_acumulado = [flujo_final_con_credito * mes for mes in meses_grafica]
            
            fig = go.Figure()
            fig.add_hline(y=0, line_dash="dash", line_color="gray")
            fig.add_trace(go.Scatter(x=meses_grafica, y=[min(0, s) for s in saldo_acumulado], fill='tozeroy', mode='lines', line_color='rgba(255,0,0,0.7)', fillcolor='rgba(255,0,0,0.2)', name='Deuda'))
            fig.add_trace(go.Scatter(x=meses_grafica, y=[max(0, s) for s in saldo_acumulado], fill='tozeroy', mode='lines', line_color='rgba(0,128,0,0.7)', fillcolor='rgba(0,128,0,0.2)', name='Ahorro'))
            fig.update_layout(title_text='Evoluci√≥n de tu Balance (Ahorro vs. Deuda)', xaxis_title='Mes', yaxis_title='Balance (MXN)')
            st.plotly_chart(fig, use_container_width=True)

            # --- EXPANSORES DE CONSECUENCIAS ---
            with st.expander("El Factor Oculto: La Inflaci√≥n"):
                st.markdown("La realidad es peor por la **inflaci√≥n**. Cada a√±o, tu dinero compra menos, tus gastos subir√°n y tu d√©ficit real ser√° mayor.")
            
            with st.expander("‚öñÔ∏è Consecuencias Legales y Reales en M√©xico por No Pagar"):
                st.markdown("""
                Si dejas de pagar un cr√©dito formal, las consecuencias son serias:
                - **Bur√≥ de Cr√©dito:** Tu historial crediticio se destruye.
                - **Cobranza Extrajudicial:** Acoso telef√≥nico.
                - **Juicio y Embargo:** Un juez puede ordenar el embargo de bienes.
                - **¬øC√°rcel? NO.** El Art. 17 de la Constituci√≥n proh√≠be la prisi√≥n por deudas civiles.
                """)
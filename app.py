import streamlit as st
import pandas as pd
import numpy_financial as npf
import plotly.express as px

# --- Configuraci√≥n de la P√°gina ---
st.set_page_config(
    page_title="Analizador de Gastos y Cr√©ditos",
    page_icon="üá≤üáΩ",
    layout="wide"
)

# --- T√≠tulo y Descripci√≥n ---
st.title('üìä Analizador de Gastos y Cr√©ditos')
st.markdown("""
Esta herramienta te ayuda a entender tu situaci√≥n financiera mensual y a determinar si puedes pagar un cr√©dito. 
**Sigue estos 3 pasos:**
1.  **Ingresa tus finanzas** en la barra lateral izquierda.
2.  **Activa la simulaci√≥n de cr√©dito** si quieres evaluar un pr√©stamo.
3.  **Revisa tu diagn√≥stico** y la gr√°fica de proyecci√≥n.
""")

# --- Barra Lateral para Entradas del Usuario ---
st.sidebar.header('Paso 1: Ingresa tus Finanzas')

ingreso_mensual = st.sidebar.number_input(
    'üí∞ Tu Ingreso Mensual Neto (MXN)',
    min_value=0.0,
    step=500.0,
    help='Ingresa el dinero que recibes al mes despu√©s de impuestos.'
)

st.sidebar.markdown('---')
st.sidebar.header('Paso 2: Registra tus Gastos')
gastos_fijos = st.sidebar.number_input(
    'üè† Gastos Fijos Mensuales (MXN)',
    min_value=0.0,
    step=100.0,
    help='Suma de todos tus gastos que no cambian mes a mes: renta, hipoteca, servicios (luz, agua, gas), internet, colegiaturas, etc.'
)

gastos_variables = st.sidebar.number_input(
    'üåÆ Gastos Variables Mensuales (MXN)',
    min_value=0.0,
    step=100.0,
    help='Un estimado de lo que gastas en promedio en cosas que var√≠an: comida, transporte, entretenimiento, compras, etc.'
)

# --- Secci√≥n de Simulaci√≥n de Cr√©dito ---
st.sidebar.markdown('---')
st.sidebar.header('Paso 3: Simulaci√≥n de Cr√©dito (Opcional)')
simular_credito = st.sidebar.checkbox('Quiero simular un cr√©dito')

monto_prestamo = 0.0
plazo_meses = 0
tasa_anual = 0.0
pago_mensual_credito = 0.0

if simular_credito:
    monto_prestamo = st.sidebar.number_input(
        'üí∏ Monto del pr√©stamo que necesitas (MXN)',
        min_value=0.0,
        step=1000.0
    )
    plazo_meses = st.sidebar.number_input(
        'üóìÔ∏è Plazo para pagar (en meses)',
        min_value=1,
        step=1
    )
    tasa_anual = st.sidebar.slider(
        'üìà Tasa de Inter√©s Anual (%)',
        min_value=0.0,
        max_value=100.0,
        value=25.0, # Un valor com√∫n para empezar
        step=0.5
    )

# --- Panel Principal: C√°lculos y Resultados ---
st.markdown('---')
st.header('Diagn√≥stico Financiero üßê')

if ingreso_mensual > 0:
    # --- C√°lculos Financieros ---
    total_gastos = gastos_fijos + gastos_variables
    flujo_libre = ingreso_mensual - total_gastos

    if simular_credito and monto_prestamo > 0:
        if tasa_anual > 0:
            # Usamos la funci√≥n PMT de numpy_financial para calcular el pago mensual
            tasa_mensual = tasa_anual / 100 / 12
            pago_mensual_credito = -npf.pmt(tasa_mensual, plazo_meses, monto_prestamo)
        else:
            # Cr√©dito sin intereses
            pago_mensual_credito = monto_prestamo / plazo_meses if plazo_meses > 0 else 0
    
    flujo_final = flujo_libre - pago_mensual_credito

    # --- Presentaci√≥n de Resultados ---
    st.subheader('Resumen Mensual Actual')
    col1, col2, col3 = st.columns(3)
    col1.metric('üü¢ Ingreso', f"${ingreso_mensual:,.2f}")
    col2.metric('üî¥ Gastos Totales', f"${total_gastos:,.2f}")
    col3.metric('üîµ Flujo Libre', f"${flujo_libre:,.2f}", 
                help='Este es el dinero que te queda despu√©s de tus gastos fijos y variables, antes de considerar el cr√©dito.')

    if simular_credito and monto_prestamo > 0:
        st.markdown('---')
        st.subheader('An√°lisis del Cr√©dito Solicitado')

        col_credito1, col_credito2 = st.columns(2)
        col_credito1.metric('üí≥ Pago Mensual del Cr√©dito', f"${pago_mensual_credito:,.2f}")
        col_credito2.metric('üí∞ Flujo Libre Final', f"${flujo_final:,.2f}", delta=f"{flujo_final - flujo_libre:,.2f}",
                            help='Este es el dinero que te quedar√≠a cada mes DESPU√âS de pagar el cr√©dito.')

        # --- Veredicto ---
        if flujo_final >= 0:
            st.success(f"**¬°S√≠ puedes pagarlo!** Despu√©s de cubrir todos tus gastos y el pago mensual del cr√©dito, a√∫n te quedar√≠an **${flujo_final:,.2f}** cada mes. ¬°Felicidades por tu buena administraci√≥n! ‚úÖ")
        else:
            st.error(f"**¬°Cuidado! No podr√≠as pagarlo.** El pago del cr√©dito supera tu capacidad de ahorro por **${abs(flujo_final):,.2f}** cada mes. Adquirir esta deuda te dejar√≠a con un d√©ficit mensual. ‚ùå")
        
        # --- Gr√°fica de Proyecci√≥n ---
        st.subheader('Proyecci√≥n de tu Dinero Durante el Plazo del Cr√©dito')
        
        # Crear un DataFrame para la gr√°fica
        meses = range(int(plazo_meses) + 1)
        saldo_acumulado = [flujo_final * mes for mes in meses]
        
        df_proyeccion = pd.DataFrame({
            'Mes': meses,
            'Saldo Acumulado': saldo_acumulado
        })

        # Generar la gr√°fica con Plotly
        fig = px.line(
            df_proyeccion, 
            x='Mes', 
            y='Saldo Acumulado', 
            title='Evoluci√≥n de tu saldo mes a mes (considerando el cr√©dito)',
            markers=True,
            labels={'Saldo Acumulado': 'Saldo Acumulado (MXN)'}
        )
        
        # L√≠nea de referencia en cero
        fig.add_hline(y=0, line_dash="dash", line_color="red")
        
        # Cambiar el color de la l√≠nea seg√∫n el resultado
        line_color = "green" if flujo_final >= 0 else "red"
        fig.update_traces(line_color=line_color)

        st.plotly_chart(fig, use_container_width=True)
        st.info("Esta gr√°fica muestra c√≥mo se acumular√≠a tu dinero (o tu deuda) a lo largo del tiempo si mantienes los mismos ingresos y gastos cada mes mientras pagas el cr√©dito.")

else:
    st.info('Ingresa tu sueldo en la barra de la izquierda para empezar el an√°lisis.')

st.markdown("---")
st.write("Creado como una herramienta de simulaci√≥n. Las condiciones reales de un cr√©dito pueden variar. Siempre consulta con tu instituci√≥n financiera.")